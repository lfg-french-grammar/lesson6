BASIC FRENCH LEXICON (1.0)

achète 	  V * @(OPT-DITRANS ACHETER)
	      @E-FORM-V.

acheté 	  V * { @(PASSIVE @(OPT-DITRANS ACHETER))
		"(^ VFORM)=PART_PASS"
		@(A-AGR MAS SG) |
		@(OPT-DITRANS ACHETER)
		(^ VFORM)=PART_PAST}.

achetée   V * @(PASSIVE @(OPT-DITRANS ACHETER))
	      "(^ VFORM)=PART_PASS"
	      @(A-AGR FEM SG).

achetées   V * @(PASSIVE @(OPT-DITRANS ACHETER))
	      "(^ VFORM)=PART_PASS"
	      @(A-AGR FEM PL).

achetés   V * @(PASSIVE @(OPT-DITRANS ACHETER))
	      "(^ VFORM)=PART_PASS"
	      @(A-AGR MAS SG).

"Participles"

arrivé 	  V * @(INTRANS ARRIVER)
	      (^ VFORM) = PART_PAST
	      (^ AUX) = ÊTRE
	      @(A-AGR MAS SG).

arrivée   V * @(INTRANS ARRIVER)
	      (^ VFORM) = PART_PAST
	      (^ AUX) = ÊTRE
	      @(A-AGR FEM SG).

arrivés   V * @(INTRANS ARRIVER)
	      (^ VFORM) = PART_PAST
	      (^ AUX) = ÊTRE
	      @(A-AGR MAS PL).

arrivées  V * @(INTRANS ARRIVER)
	      (^ VFORM) = PART_PAST
	      (^ AUX) = ÊTRE
	      @(A-AGR FEM PL).

chanté 	  V * @(OPT-TRANS CHANTER)
	      (^ VFORM) = PART_PAST
	      (^ AUX) = AVOIR.

dansé 	  V * @(INTRANS DANSER)
	      (^ VFORM) = PART_PAST
	      (^ AUX) = AVOIR.

attendu   V * { { (^ PRED)='ATTENDRE<(^ OBL)(^ SUBJ)>'
		  (^ OBL CASE)=c PAR |
		  (^ PRED)='ATTENDRE<NULL (^ SUBJ)>'}
		(^ VFORM)= PART_PASS
		(^ SUBJ GEN)=MAS
		(^ SUBJ NUM)=SG |
		@(OPT-TRANS ATTENDRE)
		(^ VFORM) = PART_PAST
		(^ AUX) = AVOIR}.

attendue   V * { (^ PRED)='ATTENDRE<(^ OBL)(^ SUBJ)>'
		(^ OBL CASE)=c PAR |
		(^ PRED)='ATTENDRE<NULL (^ SUBJ)>'}
	      (^ VFORM)=PART_PASS
	      (^ SUBJ GEN)=FEM
	      (^ SUBJ NUM)=SG.

"habité   V * { (^ PRED)='HABITER<(^ OBL)(^ SUBJ)>'
		(^ OBL CASE)=c PAR |
		(^ PRED)='HABITER< NULL (^ SUBJ)>'}
	      (^ VFORM)=PART_PASS
	      (^ SUBJ GEN)=MAS
	      (^ SUBJ NUM)=SG."

habité 	  V * @(PASS-TRANS HABITER MAS SG).

habités   V * { (^ PRED)='HABITER<(^ OBL)(^ SUBJ)>'
		(^ OBL CASE)=c PAR |
		(^ PRED)='HABITER< NULL (^ SUBJ)>'}
	      (^ VFORM)=PART_PASS
	      (^ SUBJ GEN)=MAS
	      (^ SUBJ NUM)=PL.

habitée   V * { (^ PRED)='HABITER<(^ OBL)(^ SUBJ)>'
		(^ OBL CASE)=c PAR |
		(^ PRED)='HABITER<NULL (^ SUBJ)>'}
	      (^ VFORM)=PART_PASS
	      (^ SUBJ GEN)=FEM
	      (^ SUBJ NUM)=SG.

habitées   V * { (^ PRED)='HABITER<(^ OBL)(^ SUBJ)>'
		(^ OBL CASE)=c PAR |
		(^ PRED)='HABITER< NULL (^ SUBJ)>'}
	      (^ VFORM)=PART_PASS
	      (^ SUBJ GEN)=FEM
	      (^ SUBJ NUM)=PL.

données   V * { (^ PRED)='DONNER<(^ OBL)(^ SUBJ)(^ OBJ2)>'
		(^ OBL CASE)=c PAR |
		(^ PRED)='DONNER<(^ SUBJ)(^ OBJ2)>'}
	      (^ VFORM)=PART_PASS
	      (^ SUBJ GEN)=FEM
	      (^ SUBJ NUM)=PL.

donnée   V * { (^ PRED)='DONNER<(^ OBL)(^ SUBJ)(^ OBJ2)>'
		(^ OBL CASE)=c PAR |
		(^ PRED)='DONNER<(^ SUBJ)(^ OBJ2)>'}
	      (^ VFORM)=PART_PASS
	      (^ SUBJ GEN)=FEM
	      (^ SUBJ NUM)=SG.

donnés   V * { (^ PRED)='DONNER<(^ OBL)(^ SUBJ)(^ OBJ2)>'
		(^ OBL CASE)=c PAR |
		(^ PRED)='DONNER<(^ SUBJ)(^ OBJ2)>'}
	      (^ VFORM)=PART_PASS
	      (^ SUBJ GEN)=MAS
	      (^ SUBJ NUM)=PL.

donné   V * { (^ PRED)='DONNER<(^ OBL)(^ SUBJ)(^ OBJ2)>'
		(^ OBL CASE)=c PAR |
		(^ PRED)='DONNER<(^ SUBJ)(^ OBJ2)>'}
	      (^ VFORM)=PART_PASS
	      (^ SUBJ GEN)=MAS
	      (^ SUBJ NUM)=SG.
	      
attend 	  V * { (^ PRED)='ATTENDRE<(^ SUBJ)(^ OBJ)>' |
		(^ PRED)='ATTENDRE<(^ SUBJ)>'}
	      (^ SUBJ PERS)=3
	      (^ SUBJ NUM)=SG
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

attende   V * { (^ PRED)='ATTENDRE<(^ SUBJ)>'|(^ PRED)='ATTENDRE<(^ SUBJ)(^ OBJ)>'}
	      (^ SUBJ NUM)=SG
	      { (^ SUBJ PERS)=3 |
		(^ SUBJ PERS)=1}
	      (^ TENSE)=PRES
	      (^ MOOD)=SUBJUNCT.

attendent V * { (^ PRED)='ATTENDRE<(^ SUBJ)(^ OBJ)>' |
		(^ PRED)='ATTENDRE<(^ SUBJ)>'}
	      (^ SUBJ PERS)=3
	      (^ SUBJ NUM)=PL
	      (^ TENSE)=PRES
	      (^ MOOD)=IND. "TODO: all inflected verbs should have these two features"

attendre  V * { (^ PRED)='ATTENDRE<(^ SUBJ)(^ OBJ)>' |
		(^ PRED)='ATTENDRE<(^ SUBJ)>'}
	      (^ VFORM)=INF.

combattre V * (^ PRED)='COMBATTRE<(^ SUBJ)(^ OBJ)>'
	      (^ VFORM)=INF.

regarde   V * {@(TRANS REGARDER) | @(DO-CTRL-V REGARDER)}
	      @E-FORM-V.

regarder V * (^ PRED)='REGARDER<(^ SUBJ)(^ OBJ)>'
	      (^ VFORM)=INF.

danser    V * (^ PRED)='DANSER<(^ SUBJ)>'
              (^ VFORM)=INF.

chante 	  V * @(INTRANS CHANTER)
	      @E-FORM-V.

chanter    V * (^ PRED)='CHANTER<(^ SUBJ)>'
              (^ VFORM)=INF.

arrive 	  V * (^ PRED)='ARRIVER<(^ SUBJ)>'
	      (^ SUBJ NUM)=SG
	      { (^ SUBJ PERS) = 1 | (^ SUBJ PERS) = 3}
	      (^ TENSE)=PRES
	      { (^ MOOD)=IND | (^ MOOD)=SUBJUNCT}.

pleurer    V * (^ PRED)='PLEURER<(^ SUBJ)>'
              (^ VFORM)=INF.

rencontre   V * (^ PRED)='RENCONTRER<(^ SUBJ)(^ OBJ)>'
	      { (^ SUBJ PERS)=1 | (^ SUBJ PERS)=3}
	      (^ SUBJ NUM)=SG
	      (^ TENSE)=PRES
	      {(^ MOOD)=IND | (^ MOOD)=SUBJUNCT}.

raconte   V * (^ PRED)='RACONTER<(^ SUBJ)(^ OBJ)>'
	      { (^ SUBJ PERS)=1 | (^ SUBJ PERS)=3}
	      (^ SUBJ NUM)=SG
	      (^ TENSE)=PRES
	      {(^ MOOD)=IND | (^ MOOD)=SUBJUNCT}.

cherche   V * (^ PRED)='CHERCHER<(^ SUBJ)(^ OBJ)>'
	      { (^ SUBJ PERS)=1 | (^ SUBJ PERS)=3}
	      (^ SUBJ NUM)=SG
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

marche   V * (^ PRED)='MARCHER<(^ SUBJ)>'
	      { (^ SUBJ PERS)=1 | (^ SUBJ PERS)=3}
	      (^ SUBJ NUM)=SG
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.


cherches  V * @(OPT-TRANS CHERCHER)
	      { @IND | @SBJV}
	      @(V-AGR 2 SG)
	      @PRS.

"cherches  V * (^ PRED)='CHERCHER<(^ SUBJ)(^ OBJ)>'
	      (^ SUBJ PERS)=2
	      (^ SUBJ NUM)=SG
	      (^ TENSE)=PRES
	      (^ MOOD)=IND."

cherchons V * (^ PRED)='CHERCHER<(^ SUBJ)(^ OBJ)>'
	      (^ SUBJ PERS)=1
	      (^ SUBJ NUM)=PL
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

cherchez  V * (^ PRED)='CHERCHER<(^ SUBJ)(^ OBJ)>'
	      (^ SUBJ PERS)=2
	      (^ SUBJ NUM)=PL
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

cherchent V * (^ PRED)='CHERCHER<(^ SUBJ)(^ OBJ)>'
	      (^ SUBJ PERS)=3
	      (^ SUBJ NUM)=PL
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

dépend 	  V * (^ PRED)='DÉPENDRE<(^ SUBJ)(^ OBL)>'
	      (^ OBL CASE)=c DE
	      (^ SUBJ PERS)=3
	      (^ SUBJ NUM)=SG
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

donne 	  V * { (^ PRED)='DONNER<(^ SUBJ)(^ OBJ)(^ OBJ2)>' 
		(^ OBJ2 CASE)=c À |
		(^ PRED)='DONNER<(^ SUBJ)(^ OBJ)>'}
	      { (^ SUBJ PERS)=1 | (^ SUBJ PERS)=3 }
	      (^ SUBJ NUM)=SG
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

est 	  V * { (^ PRED)='ÊTRE<(^ SUBJ)(^ XCOMP)>'
		(^ SUBJ)=(^ XCOMP SUBJ)
		@(CAT (^ XCOMP) {AP PP})
		(^ TENSE)=PRES|
		"(^ AUX) = ÊTRE"
		"(^ PASSIVE) = +"
		(^ VFORM) =c PART_PASS 
		(^ TENSE)=PRES| 
		(^ VFORM) =c PART_PAST
		(^ AUX) =c ÊTRE
		(^ TENSE)=COMPOUND_PAST }
	      "(^ SUBJ PERS)=3
	      (^ SUBJ NUM)=SG
	      (^ MOOD)=IND"
	      @(V-AGR 3 SG)
	      @IND.

"été 	  V * (^ VFORM) =c PART_PASS
	      (^ VFORM) = PART_PAST
	      (^ AUX) = ÊTRE. "


sont 	  V * { (^ PRED)='ÊTRE<(^ SUBJ)(^ XCOMP)>'
		(^ SUBJ)=(^ XCOMP SUBJ)
		@(CAT (^ XCOMP) {AP PP})
		(^ TENSE)=PRES|
		"(^ AUX) = ÊTRE"
		"(^ PASSIVE) = +"
		(^ VFORM) =c PART_PASS 
		(^ TENSE)=PRES| 
		(^ VFORM) =c PART_PAST
		(^ TENSE)=COMPOUND_PAST 
		(^ AUX) =c ÊTRE}
	      (^ SUBJ PERS)=3
	      (^ SUBJ NUM)=PL
	      (^ MOOD)=IND.


a 	  V * { (^ PRED)='AVOIR<(^ SUBJ)(^ OBJ)>'
		(^ TENSE)=PRES| 
		(^ AUX) =c AVOIR
		(^ VFORM) =c PART_PAST
		(^ TENSE)=COMPOUND_PAST}
	      "(^ SUBJ PERS)=3
	      (^ SUBJ NUM)=SG
	      (^ MOOD)=IND"
	      @(V-AGR 3 SG)
	      @IND.

semble 	  V * (^ PRED)='SEMBLER<(^ SUBJ)(^ XCOMP)>'
	      (^ SUBJ)=(^ XCOMP SUBJ)
	      @(CAT (^ XCOMP) AP)
	      (^ SUBJ PERS)=3
	      (^ SUBJ NUM)=SG
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

passe 	  V * { (^ PRED)='PASSER<(^ SUBJ)>' |
		(^ PRED)='PASSER<(^ OBJ)>(^ SUBJ)'
		(^ SUBJ FORM)=c IL }
	      (^ SUBJ PERS)=3
	      (^ SUBJ NUM)=SG
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

passent   V * (^ PRED)='PASSER<(^ SUBJ)>'
	      (^ SUBJ PERS)=3
	      (^ SUBJ NUM)=PL
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

passer   V * (^ PRED)='PASSER<(^ SUBJ)>'
	      (^ VFORM)=INF.

pleut 	  V * (^ PRED)='PLEUVOIR<>(^ SUBJ)'
	      (^ SUBJ FORM)=c IL
	      (^ SUBJ PERS)=3
	      (^ SUBJ NUM)=SG
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

"(^ SUBJ PRON-TYPE)=c EXPL"
"pleut 	  V * (^ PRED)='PLEUVOIR<>(^ SUBJ)'
	      ~ (^ SUBJ PRED)
	      (^ SUBJ PERS)=3
	      (^ SUBJ NUM)=SG."

doit 	  V * @(CTRL-V DEVOIR)
	      @(V-AGR 3 SG)
	      @IND
	      @PRS.

continue  V * @(CTRL-V-C CONTINUER À)
	      { @(V-AGR 1 SG) | @(V-AGR 3 SG)}
	      { @IND | @SBJV}
	      @PRS.

écoute 	  V * @(DO-CTRL-V ÉCOUTER)
	      { @(V-AGR 1 SG) | @(V-AGR 3 SG)}
	      { @IND | @SBJV}
	      @PRS.
	      
veut 	  V * { "(^ PRED)='VOULOIR<(^ SUBJ)(^ XCOMP)>'"
		"(^ XCOMP SUBJ)=(^ SUBJ)"
		@(CTRL-V VOULOIR)
		"~ (^ XCOMP CFORM)"
		"(^ XCOMP VFORM) =c INF" "TODO: check if only (^ XCOMP VFORM) excludes AP and PP XCOMPs"
	       |
		(^ PRED)='VOULOIR<(^ SUBJ)(^ COMP)>'
		(^ COMP MOOD) =c SUBJUNCT
		(^ COMP CLAUSE_TYPE) ="c" DECLAR} "TODO: check if =c is really necessary; OK: no"
	      (^ SUBJ NUM)=SG
	      (^ SUBJ PERS)=3
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

croit 	  V * (^ PRED)='CROIRE<(^ SUBJ)(^ XCOMP)>'
	      (^ XCOMP SUBJ)=(^ SUBJ)
	      ~ (^ XCOMP CFORM) 
	      (^ XCOMP VFORM) =c INF
	      (^ SUBJ NUM)=SG
	      (^ SUBJ PERS)=3
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

croire 	  V * (^ PRED)='CROIRE<(^ SUBJ)(^ XCOMP)>'
	      (^ XCOMP SUBJ)=(^ SUBJ)
	      ~ (^ XCOMP CFORM) 
	      (^ XCOMP VFORM) =c INF
	      (^ VFORM)=INF.


voit 	  V * { (^ PRED)='VOIR<(^ SUBJ)(^ OBJ)(^ XCOMP)>'
		(^ XCOMP SUBJ)=(^ OBJ)
		~ (^ XCOMP CFORM)
		(^ XCOMP VFORM) =c INF
	      | 
		(^ PRED)='VOIR<(^ SUBJ)(^ OBJ)>' }
	      (^ SUBJ NUM)=SG
	      (^ SUBJ PERS)=3
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

voir 	  V * { (^ PRED)='VOIR<(^ SUBJ)(^ OBJ)(^ XCOMP)>'
		(^ XCOMP SUBJ)=(^ OBJ)
		~ (^ XCOMP CFORM)
		(^ XCOMP VFORM) =c INF
	      | 
		(^ PRED)='VOIR<(^ SUBJ)(^ OBJ)>' }
	      (^ VFORM)=INF.

pouvoir   V * (^ PRED)='POUVOIR<(^ SUBJ)(^ XCOMP)>'
	      (^ XCOMP SUBJ)=(^ SUBJ)
	      ~ (^ XCOMP CFORM)
	      (^ XCOMP VFORM) =c INF
	      (^ VFORM)=INF.

entendre 	  V * { (^ PRED)='ENTENDRE<(^ SUBJ)(^ OBJ)(^ XCOMP)>'
		(^ XCOMP SUBJ)=(^ OBJ)
		~ (^ XCOMP CFORM)
		(^ XCOMP VFORM) =c INF
	      | 
		(^ PRED)='ENTENDRE<(^ SUBJ)(^ OBJ)>' }
	      (^ VFORM)=INF.

entend 	  V * { (^ PRED)='ENTENDRE<(^ SUBJ)(^ OBJ)(^ XCOMP)>'
		(^ XCOMP SUBJ)=(^ OBJ)
		~ (^ XCOMP CFORM)
		(^ XCOMP VFORM) =c INF
	      | 
		(^ PRED)='ENTENDRE<(^ SUBJ)(^ OBJ)>' }
	      @IND
	      @PRS
	      @(V-AGR 3 SG).


demande   V * { @(IO-CTRL-V-C DEMANDER DE) "@(DIRECTIVE DEMANDER OBJ2 À)" | 
		@(CTRL-V-C DEMANDER À) | 
		@(DITRANS DEMANDER) |
		@(COMP-V DEMANDER SUBJUNCT DECLAR) |
		@(COMP-IO-V DEMANDER IND INTERR) }
	      @E-FORM-V.

invite 	  V * @(DIRECTIVE INVITER OBJ À)
	      @E-FORM-V.

pousse 	  V * @(DIRECTIVE POUSSER OBJ À)
	      @E-FORM-V.

implore   V * @(DIRECTIVE IMPLORER OBJ DE)
	      @E-FORM-V.

ordonne   V * @(DIRECTIVE ORDONNER OBJ2 DE)
	      @E-FORM-V.

prie   V * @(DIRECTIVE PRIER OBJ DE)
	      @E-FORM-V.

défend 	  V * @(DIRECTIVE DÉFENDRE OBJ2 DE) "@(IO-CTRL-V-C DÉFENDRE DE)"
	      @(V-AGR 3 SG)
	      @PRS
	      @IND.

permet 	  V * { @(DIRECTIVE PERMETTRE OBJ2 DE) |
		@(COMP-V PERMETTRE SUBJUNCT DECLAR)}
	      { @(V-AGR 3 SG) | @(V-AGR 1 SG)}
	      @PRS
	      @IND.

exige 	  V * "(^ PRED)='EXIGER<(^ SUBJ)(^ XCOMP)>'
	      (^ XCOMP SUBJ)=(^ SUBJ)
	      (^ XCOMP CFORM) =c DE
	      (^ SUBJ NUM)=SG
	      (^ SUBJ PERS)=3
	      (^ TENSE)=PRES
	      (^ MOOD)=IND"
	      {@(COMP-V EXIGER SUBJUNCT DECLAR) |
	      @(CTRL-V-C EXIGER DE) |
	      @(DITRANS EXIGER) }
	      @E-FORM-V.

sait 	  V * (^ PRED)='SAVOIR<(^ SUBJ)(^ COMP)>'
	      (^ COMP MOOD) =c IND
	      "(^ COMP CLAUSE_TYPE) =c DECLAR" "underspecified"
	      (^ SUBJ NUM)=SG
	      (^ SUBJ PERS)=3
	      (^ TENSE)=PRES
	      (^ MOOD)=IND.

sache 	  V * (^ PRED)='SAVOIR<(^ SUBJ)(^ COMP)>'
	      (^ COMP MOOD) =c IND
	      "(^ COMP CLAUSE_TYPE) =c DECLAR" "underspecified"
	      (^ SUBJ NUM)=SG
	      { (^ SUBJ PERS)=1 |
		(^ SUBJ PERS)=3}
	      (^ TENSE)=PRES
	      (^ MOOD)=SUBJUNCT.

commence  V * "(^ PRED)='COMMENCER<(^ SUBJ)(^ XCOMP)>'
	      (^ XCOMP SUBJ)=(^ SUBJ)
	      (^ XCOMP CFORM)=c À
	      (^ XCOMP VFORM) =c INF
	      (^ SUBJ NUM)=SG
	      (^ SUBJ PERS)=3
	      (^ TENSE)=PRES
	      (^ MOOD)=IND" 
	      @(CTRL-V-C COMMENCER À)
	      @E-FORM-V.


cesse 	  V * "(^ PRED)='CESSER<(^ SUBJ)(^ XCOMP)>'
	      (^ XCOMP SUBJ)=(^ SUBJ)
	      (^ XCOMP CFORM)=c DE
	      (^ XCOMP VFORM) =c INF
	      (^ SUBJ NUM)=SG
	      (^ SUBJ PERS)=3
	      (^ TENSE)=PRES
	      (^ MOOD)=IND"
	      @(CTRL-V-C CESSER DE)
	      @E-FORM-V.


----